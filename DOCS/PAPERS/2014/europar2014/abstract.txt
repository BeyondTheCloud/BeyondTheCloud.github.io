The use of computing resources provided by cloud companies has become very common. Cloud providers leverage on big datacenters containing tens of thousands of servers. Designing efficient software that can work at this scale is very complex: fault tolerance, network overhead and synchronization can have a significant cost.

A possible solution to minimize these costs is to consider locality properties: servers will collaborate first with close servers from the same geographical site. As a result, collaboration between servers can take into account infrastructure parameters such as bandwidth, ping between sites and can be organized in a more decentralized manners.

This paper shows the case of a large scala virtual machine scheduling algorithm, DVMS, that have been adapted to take advantage of locality properties by using a vivaldi based algorithm. Results of experiments conducted on the grid5000 tesbed, comparing the chord based versus the vivaldi based algorithm, will be presented in the last section.

